name: Deploy to Azure VM

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Create deployment package
        run: |
          mkdir -p deployment
          cp -r *.js *.json *.html *.css assets deployment/
          cp -r .github deployment/ 2>/dev/null || true
          zip -r deployment.zip deployment/

      - name: Upload deployment package to VM
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.AZURE_VM_HOST }}
          username: ${{ secrets.AZURE_VM_USERNAME }}
          password: ${{ secrets.AZURE_VM_PASSWORD }}
          port: ${{ secrets.AZURE_VM_PORT }}
          source: "deployment.zip"
          target: "C:/www/expressaid"

      - name: Deploy to Azure Windows VM
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.AZURE_VM_HOST }}
          username: ${{ secrets.AZURE_VM_USERNAME }}
          password: ${{ secrets.AZURE_VM_PASSWORD }}
          port: ${{ secrets.AZURE_VM_PORT }}
          script: |
            powershell -Command "
            `$env:MONGODB_URI='${{ secrets.MONGODB_URI }}';
            `$env:DB_NAME='${{ secrets.DB_NAME }}';
            `$env:COLLECTION_NAME='${{ secrets.COLLECTION_NAME }}';
            `$env:PORT='${{ secrets.PORT }}';

            if (!(Test-Path 'C:\www\expressaid')) {
                New-Item -ItemType Directory -Path 'C:\www\expressaid' -Force;
            }

            Set-Location 'C:\www\expressaid';

            pm2 stop expressaid 2>`$null;
            pm2 delete expressaid 2>`$null;

            if (Test-Path 'deployment.zip') {
                Expand-Archive -Path 'deployment.zip' -DestinationPath 'temp' -Force;
                Move-Item -Path 'temp\deployment\*' -Destination 'C:\www\expressaid' -Force;
                Remove-Item -Path 'temp' -Recurse -Force;
                Remove-Item -Path 'deployment.zip' -Force;
            } else {
                Write-Host 'Deployment package not found';
                exit 1;
            }

            npm ci --production;

            if (!(Test-Path '.env')) {
                Write-Host 'Creating .env file...';
                Set-Content -Path '.env' -Value \"MONGODB_URI=`$env:MONGODB_URI`nDB_NAME=`$env:DB_NAME`nCOLLECTION_NAME=`$env:COLLECTION_NAME`nPORT=3000\";
            }

            pm2 start server.js --name expressaid;
            pm2 save;
            pm2 startup;
            "
          
      - name: Cleanup local build artifacts
        run: |
          rm -rf deployment
          rm -f deployment.zip
